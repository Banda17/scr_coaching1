No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>, queryClient?: QueryClient | undefined): DefinedUseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'DefinedInitialDataOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>, queryClient?: QueryClient | undefined): UseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UndefinedInitialDataOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>'.
  Overload 3 of 3, '(options: UseQueryOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>, queryClient?: QueryClient | undefined): UseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UseQueryOptions<{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[], Error, { ...; }[], QueryKey>'.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:24:5

    22 |     retry: 3,
    23 |     staleTime: 1000 * 60 * 5, // Cache for 5 minutes
  > 24 |     onError: (error) => {
       |     ^^^^^^^
    25 |       console.error('[Schedules] Failed to fetch trains:', error);
    26 |     },
    27 |     onSuccess: (data) => {

 ERROR(TypeScript)  Parameter 'error' implicitly has an 'any' type.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:24:15

    22 |     retry: 3,
    23 |     staleTime: 1000 * 60 * 5, // Cache for 5 minutes
  > 24 |     onError: (error) => {
       |               ^^^^^
    25 |       console.error('[Schedules] Failed to fetch trains:', error);
    26 |     },
    27 |     onSuccess: (data) => {

 ERROR(TypeScript)  Parameter 'data' implicitly has an 'any' type.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:27:17

    25 |       console.error('[Schedules] Failed to fetch trains:', error);
    26 |     },
  > 27 |     onSuccess: (data) => {
       |                 ^^^^
    28 |       console.log('[Schedules] Successfully fetched trains:', {
    29 |         count: data?.length || 0,
    30 |         sample: data[0] || null

 ERROR(TypeScript)  Property 'length' does not exist on type 'TQueryFnData | never[]'.
  Property 'length' does not exist on type 'TQueryFnData'.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:59:24

    57 |         data: trains,
    58 |         isArray: Array.isArray(trains),
  > 59 |         length: trains.length,
       |                        ^^^^^^
    60 |         sampleTrain: trains[0] || null,
    61 |         loading: isLoadingTrains,
    62 |         error: trainsError instanceof Error ? trainsError.message : trainsError

 ERROR(TypeScript)  Element implicitly has an 'any' type because expression of type '0' can't be used to index type 'TQueryFnData | never[]'.
  Property '0' does not exist on type 'TQueryFnData | never[]'.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:60:22

    58 |         isArray: Array.isArray(trains),
    59 |         length: trains.length,
  > 60 |         sampleTrain: trains[0] || null,
       |                      ^^^^^^^^^
    61 |         loading: isLoadingTrains,
    62 |         error: trainsError instanceof Error ? trainsError.message : trainsError
    63 |       },

 ERROR(TypeScript)  Property 'length' does not exist on type 'never[] | NonNullable<TQueryFnData>'.
  Property 'length' does not exist on type 'NonNullable<TQueryFnData>'.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:92:25

    90 |   }
    91 |
  > 92 |   if (!trains || trains.length === 0) {
       |                         ^^^^^^
    93 |     return (
    94 |       <div className="container mx-auto p-4">
    95 |         <div className="flex items-center gap-4">

 ERROR(TypeScript)  Type 'never[] | NonNullable<TQueryFnData>' is not assignable to type '{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[]'.
  Type '{}' is missing the following properties from type '{ id: number; trainNumber: string; description: string | null; type: string; maxSpeed: number | null; passengerCapacity: number | null; cargoCapacityTons: number | null; priorityLevel: number | null; features: string | null; }[]': length, pop, push, concat, and 35 more.
 FILE  /home/runner/workspace/client/src/pages/Schedules.tsx:128:11

    126 |       <Card className="p-6">
    127 |         <ScheduleForm
  > 128 |           trains={trains}
        |           ^^^^^^
    129 |           locations={locations}
    130 |         />
    131 |       </Card>

[TypeScript] Found 7 errors. Watching for file changes.
